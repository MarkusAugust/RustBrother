name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: rustbrother
            asset_name: rustbrother-linux-amd64
          - os: windows-latest
            artifact_name: rustbrother.exe
            asset_name: rustbrother-windows-amd64
          - os: macos-latest
            artifact_name: rustbrother
            asset_name: rustbrother-darwin-amd64
          - os: macos-14
            artifact_name: rustbrother
            asset_name: rustbrother-darwin-arm64

    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build
        run: cargo build --release

      - name: Strip binary (Unix)
        if: matrix.os != 'windows-latest'
        run: strip target/release/${{ matrix.artifact_name }}

      - name: Create tarball (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          cd target/release
          tar czf ${{ matrix.asset_name }}.tar.gz ${{ matrix.artifact_name }}

      - name: Create zip (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd target/release
          7z a ${{ matrix.asset_name }}.zip ${{ matrix.artifact_name }}

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/release/${{ matrix.asset_name }}.tar.gz
            target/release/${{ matrix.asset_name }}.zip
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
